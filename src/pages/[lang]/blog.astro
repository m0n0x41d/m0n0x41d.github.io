---
import LayoutSecondary from '@layouts/LayoutSecondary.astro';
import { Container } from '@components/Container';
import { getCollection } from 'astro:content';
import { format } from 'date-fns';
import { ru } from 'date-fns/locale/ru';
import { isValidLanguage, DEFAULT_LANGUAGE, type Language } from "@utils/language";

export function getStaticPaths() {
  return [
    { params: { lang: 'en' } },
    { params: { lang: 'ru' } },
  ];
}

const { lang } = Astro.params;
const currentLang = isValidLanguage(lang as string) ? (lang as Language) : DEFAULT_LANGUAGE;

// Get all blog posts
const allPosts = await getCollection('blog');
// Sort by date (newest first)
allPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
// Filter by language
const posts = allPosts.filter(post => post.data.language === currentLang);

// Translations
const translations = {
  en: {
    title: "Ivan's Exocortex",
    description: "Read my latest thoughts and articles",
    pageTitle: "Blog Posts",
    noPosts: "No posts found. Check back soon!"
  },
  ru: {
    title: "Экзокортекс Ивана",
    description: "Читайте мои последние мысли и статьи",
    pageTitle: "Записи блога",
    noPosts: "Записи не найдены. Загляните позже!"
  }
};

const { title, description, pageTitle, noPosts } = translations[currentLang];
---

<LayoutSecondary 
	title={title} 
	description={description} 
	lang={currentLang} 
	showFooterContact={false}
	showFooter={false}
>
  <div class="blog-wrapper" data-dark-section>
    <Container client:only="react">
      <div class="blog-header">
        <h1>{pageTitle}</h1>
      </div>
      
      <div class="blog-content">
        {posts.length > 0 ? (
          <ul class="post-list">
            {posts.map((post) => (
              <li class="post-item">
                <a href={`/${currentLang}/blog/${post.slug.replace(`${currentLang}/`, '')}`}>
                  <h2>{post.data.title}</h2>
                  <div class="post-meta">
                    <span>
                      {currentLang === 'en' 
                        ? format(post.data.pubDate, 'MMMM d, yyyy')
                        : format(post.data.pubDate, 'd MMMM yyyy', { locale: ru })
                      }
                    </span>
                  </div>
                  <p class="post-description">{post.data.description}</p>
                </a>
              </li>
            ))}
          </ul>
        ) : (
          <p class="no-posts">{noPosts}</p>
        )}
      </div>
    </Container>
  </div>
</LayoutSecondary>

<style>
  .blog-wrapper {
    background-color: var(--bg-element-secondary);
    padding: 100px 0;
    min-height: 80vh;
    color: var(--text-default);
  }
  
  .blog-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    border-bottom: 1px solid var(--secondary);
    padding-bottom: 1rem;
  }
  
  .blog-header h1 {
    margin: 0;
  }
  
  .post-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .post-item {
    margin-bottom: 2.5rem;
    border-bottom: 1px solid var(--tertiary);
    padding-bottom: 2.5rem;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.5s forwards;
    animation-delay: calc(var(--animation-order, 0) * 0.1s);
  }
  
  .post-item:nth-child(1) { --animation-order: 1; }
  .post-item:nth-child(2) { --animation-order: 2; }
  .post-item:nth-child(3) { --animation-order: 3; }
  .post-item:nth-child(4) { --animation-order: 4; }
  .post-item:nth-child(5) { --animation-order: 5; }
  .post-item:nth-child(6) { --animation-order: 6; }
  .post-item:nth-child(7) { --animation-order: 7; }
  .post-item:nth-child(8) { --animation-order: 8; }
  .post-item:nth-child(9) { --animation-order: 9; }
  .post-item:nth-child(10) { --animation-order: 10; }
  
  .post-item:last-child {
    border-bottom: none;
    margin-bottom: 0;
    padding-bottom: 0;
  }
  
  .post-item a {
    text-decoration: none;
    color: inherit;
    display: block;
    transition: opacity 0.2s;
  }
  
  .post-item a:hover {
    opacity: 0.8;
  }
  
  .post-item h2 {
    margin: 0 0 0.25rem 0;
    color: var(--text-default);
    font-size: 1.5em;
  }
  
  .post-meta {
    font-size: 0.9em;
    margin-bottom: 0.5rem;
    line-height: 1.2;
    display: flex;
    align-items: center;
  }
  
  .post-meta span {
    position: relative;
    padding-left: 22px;
    color: var(--tertiary);
    font-weight: 500;
    display: inline-block;
  }
  
  .post-meta span::before {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 16px;
    height: 16px;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23f0f0f0'%3E%3Cpath d='M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8zm.5-13H11v6l5.2 3.2.8-1.3-4.5-2.7V7z'/%3E%3C/svg%3E");
    background-size: contain;
    background-repeat: no-repeat;
  }
  
  .post-description {
    color: var(--text-default);
    line-height: 1.5;
    margin-top: 0;
    margin-bottom: 0;
  }
  
  .no-posts {
    font-size: 1.2rem;
    font-style: italic;
    margin: 2rem 0;
    text-align: center;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style> 